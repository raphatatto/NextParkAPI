// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NextParkAPI.Data;

#nullable disable

namespace NextParkAPI.Data.Migrations
{
    [DbContext(typeof(NextParkContext))]
    partial class NextParkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NextParkAPI.Models.Manutencao", b =>
                {
                    b.Property<int>("IdManutencao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MANUTENCAO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdManutencao"));

                    b.Property<string>("DsManutencao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DS_MANUTENCAO");

                    b.Property<DateTime?>("DtFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_FIM");

                    b.Property<DateTime?>("DtInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INICIO");

                    b.Property<int>("IdMoto")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOTO");

                    b.HasKey("IdManutencao");

                    b.HasIndex("IdMoto");

                    b.ToTable("TB_NEXTPARK_MANUTENCAO", (string)null);
                });

            modelBuilder.Entity("NextParkAPI.Models.Moto", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MOTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<int>("IdVaga")
                        .HasColumnType("int")
                        .HasColumnName("ID_VAGA");

                    b.Property<string>("NmModelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NM_MODELO");

                    b.Property<string>("NrPlaca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NR_PLACA");

                    b.Property<string>("StMoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ST_MOTO");

                    b.HasKey("IdMoto");

                    b.ToTable("TB_NEXTPARK_MOTO", (string)null);
                });

            modelBuilder.Entity("NextParkAPI.Models.Vaga", b =>
                {
                    b.Property<int>("IdVaga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VAGA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVaga"));

                    b.Property<string>("AreaVaga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AREA_VAGA");

                    b.Property<int>("IdPatio")
                        .HasColumnType("int")
                        .HasColumnName("ID_PATIO");

                    b.Property<string>("StVaga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ST_VAGA");

                    b.HasKey("IdVaga");

                    b.ToTable("TB_NEXTPARK_VAGA", (string)null);
                });

            modelBuilder.Entity("NextParkAPI.Models.Manutencao", b =>
                {
                    b.HasOne("NextParkAPI.Models.Moto", null)
                        .WithMany()
                        .HasForeignKey("IdMoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
